{"version":3,"file":"../sticky-states.min.js","sources":["sticky-states.js"],"sourcesContent":["/**\n * File sticky-states.js.\n *\n * Implement sticky elements based on scroll position.\n */\n\n (function (root, factory) {\n\tif ( typeof define === 'function' && define.amd ) {\n\t  define([], factory(root));\n\t} else if ( typeof exports === 'object' ) {\n\t  module.exports = factory(root);\n\t} else {\n\t  root.StickyStates = factory(root);\n\t}\n})(typeof global !== 'undefined' ? global : this.window || this.global, function (root) {\n\n\t'use strict';\n\n\tvar _hasInitialized = false;\n\tvar _publicMethods = {\n\t\tmanagers: [],\n\t};\n\tvar _settings = {};\n\tvar _defaults = {\n\t\telementSelector: '[data-sticky-states]',\n\t\tinnerElementSelector: '[data-sticky-states-inner]',\n\n\t\tisEndPositionClass: 'is-end-position',\n\t\tisStickyClass: 'is-sticky',\n\t\tisStickyTopClass: 'is-sticky--top',\n\t\tisStickyBottomClass: 'is-sticky--bottom',\n\t\tisActivatedClass: 'is-activated',\n\n\t\tpositionAttribute: 'data-sticky-position',\n\t\tthresholdAttribute: 'data-sticky-threshold',\n\t\tstickyRelativeToAttribute: 'data-sticky-relative-to',\n\t\tstaticAtEndAttribute: 'data-sticky-static-at-end',\n\t\tcontainerAttribute: 'data-sticky-container',\n\n\t\tposition: 'top', // Accepted values: `top`, `bottom`\n\t\tthreshold: 0,\n\t};\n\tvar _resizeObserver;\n\n\n\n\t/*!\n\t* Merge two or more objects together.\n\t* (c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com\n\t* @param   {Boolean}  deep     If true, do a deep (or recursive) merge [optional]\n\t* @param   {Object}   objects  The objects to merge together\n\t* @returns {Object}            Merged values of defaults and options\n\t*/\n\tvar extend = function () {\n\t\t// Variables\n\t\tvar extended = {};\n\t\tvar deep = false;\n\t\tvar i = 0;\n\n\t\t// Check if a deep merge\n\t\tif ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\n\t\t\tdeep = arguments[0];\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge the object into the extended object\n\t\tvar merge = function (obj) {\n\t\t\tfor (var prop in obj) {\n\t\t\t\tif (obj.hasOwnProperty(prop)) {\n\t\t\t\t\t// If property is an object, merge properties\n\t\t\t\t\tif (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n\t\t\t\t\t\textended[prop] = extend(extended[prop], obj[prop]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\textended[prop] = obj[prop];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop through each object and conduct a merge\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar obj = arguments[i];\n\t\t\tmerge(obj);\n\t\t}\n\n\t\treturn extended;\n\t};\n\n\n\n\t/**\n\t * Execute a function immediately and prevent execution of the same method again for the amount of time defined as the threshold.\n\t *\n\t * @param   function  fn          Function to be executed.\n\t * @param   int       threshhold  Threshold time in milliseconds. Default 250ms.\n\t * @param   object    scope       Scope of execution of the function.\n\t *\n\t * @return  function              Function to be executed, incapsulated in a timed function.\n\t */\n\tvar _throttle = function( fn, threshhold, scope ) {\n\t\tthreshhold || (threshhold = 250);\n\n\t\tvar last,\n\t\t\tdeferTimer;\n\n\t\treturn function () {\n\t\t\tvar context = scope || this;\n\n\t\t\tvar now = +new Date,\n\t\t\t\targs = arguments;\n\n\t\t\tif ( last && now < last + threshhold ) {\n\t\t\t\t// hold on to it\n\t\t\t\tclearTimeout( deferTimer );\n\t\t\t\tdeferTimer = setTimeout( function () {\n\t\t\t\t\tlast = now;\n\t\t\t\t\tfn.apply( context, args );\n\t\t\t\t}, threshhold );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlast = now;\n\t\t\t\tfn.apply( context, args );\n\t\t\t}\n\t\t};\n\t}\n\n\n\n\t/**\n\t * Returns a function, that, as long as it continues to be invoked, will not\n\t * be triggered. The function will be called after it stops being called for\n\t * N milliseconds. If `immediate` is passed, trigger the function on the\n\t * leading edge, instead of the trailing.\n\t *\n\t * @param   {[type]}  func       Function to be executed.\n\t * @param   {[type]}  wait       Wait time in milliseconds.\n\t * @param   {[type]}  immediate  Trigger the function on the leading edge.\n\t *\n\t * @return  function              Function to be executed, incapsulated in a timed function.\n\t */\n\tvar _debounce = function ( func, wait, immediate ) {\n\t\tvar timeout;\n\n\t\treturn function() {\n\t\t  var context = this, args = arguments;\n\t\t  var later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply( context, args );\n\t\t  };\n\n\t\t  var callNow = immediate && !timeout;\n\t\t  clearTimeout( timeout );\n\t\t  timeout = setTimeout( later, wait );\n\n\t\t  if ( callNow ) func.apply( context, args );\n\t\t};\n\t};\n\n\n\n\t/**\n\t * Check if a string is a JSON object.\n\t */\n\tvar _isJSON = function( string ) {\n\t\ttry { JSON.parse( string ); }\n\t\tcatch ( e ) { return false; }\n\t\treturn true;\n\t}\n\n\n\n\t/**\n\t * Get the offset position of the element recursively adding the offset position of parent offset elements until the `stopElement` (or the `body` element).\n\t *\n\t * @param   HTMLElement  element      Element to get the offset position for.\n\t * @param   HTMLElement  stopElement  Parent offset element where to stop adding the offset position to the total offset top position of the element.\n\t *\n\t * @return  int                       Offset position of the element until the `stopElement` or the `body` element.\n\t */\n\tvar getOffsetTop = function( element, stopElement ) {\n\t\tvar offsetTop = 0;\n\n\t\twhile( element ) {\n\t\t\t// Reached the stopElement\n\t\t\tif ( stopElement && stopElement == element ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\toffsetTop += element.offsetTop;\n\t\t\telement = element.offsetParent;\n\t\t}\n\n\t\treturn offsetTop;\n\t}\n\n\n\n\t/**\n\t * Check if the element is considered visible. Does not consider the CSS property `visibility: hidden;`.\n\t */\n\tvar isVisible = function( element ) {\n\t\treturn !!( element.offsetWidth || element.offsetHeight || element.getClientRects().length );\n\t}\n\n\n\n\t/**\n\t * Check if the element is considered sticky.\n\t */\n\t _publicMethods.isStickyPosition = function( element ) {\n\t\t// Try checking for the sticky class\n\t\tif ( element.matches( '.' + _settings.isStickyClass ) ) { return true; }\n\n\t\t// Try checking for computed styles (slower)\n\t\t// Used for elements set to sticky position by other means other than using sticky-states\n\t\tvar elementComputedPosition = window.getComputedStyle( element ).position;\n\t\treturn elementComputedPosition == 'fixed' || elementComputedPosition == 'sticky';\n\t}\n\n\n\n\t/**\n\t * Get the relative element to which the sticky element position will be calculated.\n\t *\n\t * @param   {string}  selectorOrJson  A string with a single CSS selector for the relative sticky element, or multiple selectors for various breakpoints as a JSON object.\n\t *\n\t * @return  {HTMLElement}             The relative sticky element, or `null` if not found.\n\t */\n\tvar getRelativeElement = function( selectorOrJson ) {\n\t\tvar relativeElement = null;\n\t\tvar windowWidth = window.innerWidth;\n\n\t\t// Multiple selectors for various breakpoints\n\t\tif ( _isJSON( selectorOrJson ) ) {\n\t\t\tvar breakpointSelectors = Object.entries( JSON.parse( selectorOrJson ) );\n\n\t\t\tfor ( var i = 0; i < breakpointSelectors.length; i++) {\n\t\t\t\tvar values = breakpointSelectors[ i ][ 1 ];\n\t\t\t\tif ( windowWidth >= values.breakpointInitial && windowWidth <= values.breakpointFinal ) {\n\t\t\t\t\trelativeElement = document.querySelector( values.selector );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Single selector\n\t\telse {\n\t\t\trelativeElement = document.querySelector( selectorOrJson );\n\t\t}\n\n\t\treturn relativeElement;\n\t}\n\n\n\n\t/**\n\t * Maybe change state of sticky elements.\n\t */\n\tvar maybeChangeState = function() {\n\t\tvar currentScrollPosition = window.pageYOffset || document.body.scrollTop;\n\n\t\t// Iterate sticky elements\n\t\tfor ( var i = 0; i < _publicMethods.managers.length; i++ ) {\n\t\t\tvar manager = _publicMethods.managers[i];\n\t\t\tvar isSticky = currentScrollPosition >= manager.settings.threshold;\n\t\t\tvar relativeHeight = 0;\n\t\t\tvar isEndThreshold = currentScrollPosition >= manager.settings.endThreshold;\n\t\t\tvar isStaticAtEnd = manager.stickyElement.hasAttribute( manager.settings.staticAtEndAttribute );\n\n\t\t\t// Maybe set isSticky value based on the relative element\n\t\t\tif ( manager.relativeElement && isVisible( manager.relativeElement ) && _publicMethods.isStickyPosition( manager.relativeElement ) ) {\n \t\t\t\trelativeHeight = manager.relativeElement.getBoundingClientRect().height;\n\t\t\t\tisSticky = currentScrollPosition >= ( manager.settings.threshold - relativeHeight );\n\t\t\t\tisEndThreshold = currentScrollPosition >= ( manager.settings.endThreshold - relativeHeight );\n\t\t\t}\n\n\t\t\t// Sticky\n\t\t\tif ( isSticky && ! isEndThreshold ) {\n\t\t\t\tvar stickyWidth = window.getComputedStyle( manager.innerElement ).width;\n\t\t\t\tvar containerHeight = window.getComputedStyle( manager.stickyElement ).height;\n\t\t\t\tmanager.innerElement.style.top = relativeHeight > 0 ? relativeHeight + 'px' : '';\n\t\t\t\tmanager.innerElement.style.width = stickyWidth; // variable already has unit `px`\n\t\t\t\tmanager.stickyElement.style.height = containerHeight; // variable already has unit `px`\n\t\t\t\tmanager.stickyElement.style.position = '';\n\t\t\t\tmanager.stickyElement.classList.add( manager.settings.isStickyClass, ( manager.settings.position == 'top' ? manager.settings.isStickyTopClass : manager.settings.isStickyBottomClass ) );\n\t\t\t\tmanager.stickyElement.classList.remove( manager.settings.isEndPositionClass );\n\t\t\t}\n\t\t\t// Absolute ( at end position )\n\t\t\telse if ( isEndThreshold && ! isStaticAtEnd ) {\n\t\t\t\tvar containerHeight = parseInt( window.getComputedStyle( manager.containerElement ).height.replace( 'px' ) );\n\t\t\t\tvar elementHeight = parseInt( window.getComputedStyle( manager.stickyElement ).height.replace( 'px' ) );\n\t\t\t\tvar elementOffsetToContainer = getOffsetTop( manager.stickyElement ) - getOffsetTop( manager.containerElement );\n\t\t\t\tmanager.innerElement.style.top = ( containerHeight - elementHeight - elementOffsetToContainer ) + 'px';\n\t\t\t\tmanager.stickyElement.classList.remove( manager.settings.isStickyClass, manager.settings.isStickyTopClass, manager.settings.isStickyBottomClass );\n\t\t\t\tmanager.stickyElement.classList.add( manager.settings.isEndPositionClass );\n\t\t\t}\n\t\t\t// Static\n\t\t\telse {\n\t\t\t\tmanager.stickyElement.classList.remove( manager.settings.isStickyClass, manager.settings.isStickyTopClass, manager.settings.isStickyBottomClass, manager.settings.isEndPositionClass );\n\t\t\t\tmanager.stickyElement.style.height = '';\n\t\t\t\tmanager.innerElement.style.width = '';\n\t\t\t\tmanager.innerElement.style.top = '';\n\t\t\t}\n\t\t}\n\t};\n\n\n\n\t/**\n\t * Loop function to changes visibility of the variation switcher.\n\t */\n\tvar throttledChangeState = _throttle( maybeChangeState, 50 );\n\tvar loop = function() {\n\t\tthrottledChangeState();\n\t\t// Loop this function indefinitely\n\t\twindow.requestAnimationFrame( loop );\n\t};\n\n\n\n\t/**\n\t * Trigger recalculate threshold values when resizing.\n\t */\n\tvar resetStickyLimitsOnResize = function() {\n\t\t// Iterate managers\n\t\tfor ( var i = 0; i < _publicMethods.managers.length; i++ ) {\n\t\t\tvar manager = _publicMethods.managers[i];\n\t\t\tif ( manager ) {\n\t\t\t\t_publicMethods.resetStickyLimits( manager );\n\t\t\t}\n\t\t}\n\t};\n\n\n\n\t/**\n\t * Recalculate threshold values.\n\t */\n\t_publicMethods.resetStickyLimits = function( manager ) {\n\t\tvar windowHeight = Math.max( document.documentElement.clientHeight, window.innerHeight || 0 );\n\t\tvar thresholdAttrValue = manager.stickyElement.getAttribute( manager.settings.thresholdAttribute );\n\t\tvar elementRect = manager.stickyElement.getBoundingClientRect();\n\t\tvar elementOffset = getOffsetTop( manager.stickyElement );\n\n\t\t// Threshold\n\t\tmanager.settings.threshold = isNaN( parseInt( thresholdAttrValue ) ) ? elementOffset : parseInt( thresholdAttrValue );\n\n\t\t// Calculate threshold for elements sticky to the bottom\n\t\tif ( manager.settings.position == 'bottom' ) {\n\t\t\tmanager.settings.threshold = Math.max( manager.settings.threshold - windowHeight + elementRect.height, 0 );\n\t\t}\n\n\t\t// Maybe get relativeElement set via attribute\n\t\tvar relativeElementAttribute = manager.stickyElement.getAttribute( manager.settings.stickyRelativeToAttribute );\n\t\tif ( relativeElementAttribute != null && relativeElementAttribute != '' ) {\n\t\t\t// Get relative sticky elements in the page\n\t\t\tmanager.relativeElement = getRelativeElement( relativeElementAttribute );\n\t\t}\n\n\t\t// Use the parent element as the container element\n\t\tmanager.containerElement = manager.stickyElement.parentNode;\n\n\t\t// Maybe get containerElement set via attribute\n\t\tvar containerSelector = manager.stickyElement.getAttribute( manager.settings.containerAttribute );\n\t\tif ( containerSelector != null && containerSelector != '' ) {\n\n\t\t\t// Try to find the containerElement in the element's hierarchy first\n\t\t\tmanager.containerElement = manager.stickyElement.closest( containerSelector );\n\n\t\t\t// Try to find the containerElement on the entire document and set to the first found element that matches the selector\n\t\t\tif ( ! manager.containerElement ) {\n\t\t\t\tmanager.containerElement = document.querySelector( containerSelector );\n\t\t\t}\n\t\t}\n\n\t\t// Maybe set endThreshold\n\t\tif ( manager.containerElement ) {\n\t\t\tvar containerHeight = parseInt( window.getComputedStyle( manager.containerElement ).height.replace( 'px' ) );\n\t\t\tvar elementHeight = parseInt( window.getComputedStyle( manager.stickyElement ).height.replace( 'px' ) );\n\t\t\tvar elementOffsetToContainer = getOffsetTop( manager.stickyElement ) - getOffsetTop( manager.containerElement );\n\n\t\t\t// Set endThreshold to bottom of containerElement\n\t\t\tmanager.settings.endThreshold = manager.settings.threshold + containerHeight - elementHeight - elementOffsetToContainer;\n\n\t\t\t// Maybe calculate endThreshold for elements sticky to the bottom\n\t\t\tif ( manager.settings.position == 'bottom' ) {\n\t\t\t\tvar endThreshold = getOffsetTop( manager.stickyElement ) - windowHeight + elementRect.height;\n\n\t\t\t\t// Maybe set endThreshold to stop sticky state at the element's normal position\n\t\t\t\tif ( endThreshold > manager.settings.threshold ) {\n\t\t\t\t\tmanager.settings.endThreshold = endThreshold;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Get manager instance from an element.\n\t *\n\t * @param    HTMLElement   An element that is a `stickyElement`, `stickyInner` or `containerElement`.\n\t */\n\t_publicMethods.getInstance = function ( element ) {\n\t\tvar instance;\n\t\t// Try getting instance from the element\n\t\tfor ( var i = 0; i < _publicMethods.managers.length; i++ ) {\n\t\t\tvar manager = _publicMethods.managers[i];\n\t\t\tif ( manager.stickyElement == element ) { instance = manager; break; }\n\t\t}\n\n\t\t// Try getting instace from other types of elements\n\t\tif ( ! instance )  { instance = _publicMethods.getInstanceFromInner( element ); }\n\n\t\treturn instance;\n\t}\n\n\t/**\n\t * Get manager instance for innerElement.\n\t */\n\t_publicMethods.getInstanceFromInner = function ( innerElement ) {\n\t\tvar instance;\n\t\tfor ( var i = 0; i < _publicMethods.managers.length; i++ ) {\n\t\t\tvar manager = _publicMethods.managers[i];\n\t\t\tif ( manager.innerElement == innerElement ) { instance = manager; break; }\n\t\t}\n\t\treturn instance;\n\t}\n\n\n\n\t/**\n\t * Initialize an sticky element.\n\t */\n\t_publicMethods.initializeElement = function( stickyElement ) {\n\t\tvar manager = {};\n\t\tmanager.settings = extend( _settings );\n\n\t\t// Get elements\n\t\tmanager.stickyElement = stickyElement;\n\t\tmanager.innerElement = manager.stickyElement.querySelector( manager.settings.innerElementSelector );\n\n\t\tvar positionAttrValue = manager.stickyElement.getAttribute( manager.settings.positionAttribute );\n\t\tmanager.settings.position = positionAttrValue == 'top' || positionAttrValue == 'bottom' ? positionAttrValue : _settings.position;\n\n\t\t// Calculate threshold values, recalculate when resize window\n\t\t_publicMethods.resetStickyLimits( manager );\n\n\t\t// Start observing resize of relevant elements\n\t\tif ( _resizeObserver ) {\n\t\t\t_resizeObserver.observe( manager.containerElement );\n\t\t\t_resizeObserver.observe( manager.stickyElement );\n\t\t\t_resizeObserver.observe( manager.innerElement );\n\t\t}\n\n\t\t// Set element as activated\n\t\tmanager.isActivated = true;\n\t\tmanager.stickyElement.classList.add( manager.settings.isActivatedClass );\n\n\t\t// Add manager to public methods\n\t\t_publicMethods.managers.push( manager );\n\t}\n\n\n\n\t/**\n\t * Initialize.\n\t */\n\t_publicMethods.init = function( options ) {\n\t\tif ( _hasInitialized ) return;\n\n\t\t// Merge with general settings with options\n\t\t_settings = extend( _defaults, options );\n\n\t\t// Initialize resize observer\n\t\tif ( window.ResizeObserver ) {\n\t\t\t_resizeObserver = new ResizeObserver( _debounce( resetStickyLimitsOnResize, 50 ) );\n\t\t}\n\n\t\t// Initialize each sticky element\n\t\tvar stickyElements = document.querySelectorAll( _settings.elementSelector );\n\t\tfor ( var i = 0; i < stickyElements.length; i++ ) {\n\t\t\t_publicMethods.initializeElement( stickyElements[ i ] );\n\t\t}\n\n\t\t// Start handling sticky states\n\t\trequestAnimationFrame( loop );\n\n\t\t_hasInitialized = true;\n\t};\n\n\n\n\t//\n\t// Public APIs\n\t//\n\treturn _publicMethods;\n\n});\n"],"names":["root","factory","define","amd","exports","module","StickyStates","global","this","window","getOffsetTop","element","stopElement","offsetTop","offsetParent","_resizeObserver","_hasInitialized","_publicMethods","managers","_settings","_defaults","elementSelector","innerElementSelector","isEndPositionClass","isStickyClass","isStickyTopClass","isStickyBottomClass","isActivatedClass","positionAttribute","thresholdAttribute","stickyRelativeToAttribute","staticAtEndAttribute","containerAttribute","position","threshold","extend","extended","deep","i","Object","prototype","toString","call","arguments","length","obj","prop","hasOwnProperty","merge","isStickyPosition","matches","elementComputedPosition","getComputedStyle","getRelativeElement","selectorOrJson","relativeElement","windowWidth","innerWidth","string","JSON","parse","e","_isJSON","breakpointSelectors","entries","values","breakpointInitial","breakpointFinal","document","querySelector","selector","resetStickyLimitsOnResize","manager","resetStickyLimits","fn","threshhold","scope","last","deferTimer","throttledChangeState","currentScrollPosition","pageYOffset","body","scrollTop","containerHeight","isSticky","settings","relativeHeight","isEndThreshold","endThreshold","isStaticAtEnd","stickyElement","hasAttribute","offsetWidth","offsetHeight","getClientRects","getBoundingClientRect","height","stickyWidth","innerElement","width","style","top","classList","add","remove","parseInt","containerElement","replace","elementHeight","elementOffsetToContainer","context","now","Date","args","clearTimeout","setTimeout","apply","loop","requestAnimationFrame","windowHeight","Math","max","documentElement","clientHeight","innerHeight","thresholdAttrValue","getAttribute","elementRect","elementOffset","isNaN","relativeElementAttribute","parentNode","containerSelector","closest","getInstance","instance","getInstanceFromInner","initializeElement","positionAttrValue","observe","isActivated","push","init","options","func","wait","immediate","timeout","ResizeObserver","callNow","stickyElements","querySelectorAll"],"mappings":"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"}